!!最終目標
・オレンジ色のボタンを抽出
・オレンジ色の3Dの(X,Y,Z)を求める
・データをファイルに出力
・Gnuplotで軌跡をプロットする

/******** Change Log ********/
[変更日] - [変更内容](変更箇所の印)
2015.10.23 - 背景差分のメソッドを作成(c56)
2015.10.22 - 処理終了後にデータを保存するかどうかの関数パラメータ設定を変更(c55)．プリコンパイル済みヘッダを追加．
2015.10.21 - キャリブレーション結果を適用(c54)
2015.10.08 - 'p'を入力したら画像を保存する(c53)
方針転換 - PCLを用いてEV3の形状と位置・姿勢を特定し，誘導につなげる
2015.09.16 - 中間発表のデータ取得用にリアルタイムプロットを有効にしプロンプトには，最小二乗法によって求めたa,b,cのみを表示する
2015.07.23 - 最小二乗法の処理を完了(まだrが怪しい)(c52)
2015.07.21 - 最小二乗法のメソッドの処理を完成(c51)
2015.07.17 - 1フレームあたりに間引いて抽出された(x,y,z)座標を3次元の組(X,Y,Z)に変換する(c50)
2015.07.15 - 最小二乗法を行うクラスLeastSquareMethodを追加(c49)
2015.07.14 - 球の最小二乗法のブランチを作成．適用を始める(c49)
2015.07.10 - データを抽出する際に間引く(c48)
2015.07.03 - gnuplotに自動縮尺を追加(c47)
2015.07.02 - gnuplotのスクリプトをファイルに出力する際に，計測する対象の状況に応じて値の範囲を変更する.中心固定用(1)，縦移動用(2)，横移動用(3)(c46)
2015.07.01 - 変数名の変更(c45)
2015.06.29 - リポジトリを非公開にするために，リモートリポジトリをGitHubからBitBucketに移行(c44)
2015.06.18 - 位置をリアルタイムにプロット&gnuplotスクリプトファイルで表示される4つのグラフを1つにまとめた(c43)
2015.06.15 - ファイル出力をメソッドに移動(c42)
2015.06.12 - 計測の初めと最後のデータが乱れるのでそのデータは除くように計測終了後に範囲内のデータだけ一気に出力する(c41)
2015.06.11 - ファイルオープンエラー処理を追加(c40).オープニング処理を追加する(c41)
2015.06.10 - データを保存した際に，自動的にディレクトリを開くように変更．のプログラム整理(c39)
2015.06.09 - KinectMethodのプログラムを整理．グローバル変数をローカル変数に移すなど．フレームレートを動画内に表示(c38)
2015.06.08 - プログラムの整理．(int)xc, (int)yc, (USHORT)zcの構造体の定義(c37)
2015.06.04 - 出力画像を合成する(c36)
2015.06.02 - 動画を出力するためにVideoWriterクラスを追加(c35)
2015.06.01 - OpenCVで作成したウインドウを全て削除するdestroyAllWindowsを追加(c34)
2015.05.29 - trackWindowから追跡するウインドウを切り取る際，余裕を持って切り取るようにする→色抽出の速度は多少落ちるが，今までは対象も少し切り抜いていたので精度は上がる??(c34)
2015.05.28 - 05.27と同じ+変数の初期化設定(c33)
2015.05.27 - CamShiftでリアルタイムで青いボールを追跡できるようになった&後で確認する用にgnuplotのスクリプトを生成する(c32)
2015.05.26 - プログラムの整理
2015.05.25 - プログラムの整理(main関数)&続き
2015.05.21 - プログラムの整理(c30).距離データがなかった場合にプロットしないようにする(c31)
2015.05.20 - プログラムの整理(c30)
2015.05.19 - 追跡している領域の1次元情報を取得(c28)&一次元情報を取得するメソッドを作成&切り取った画像を保存するメソッドを作成&切り取った画像からオレンジを抽出(c29)
2015.05.18 - 異常終了時のデータを削除&追跡している領域の情報を取得&(c28)
2015.05.14 - プログラムスタート條件の変更と取得したデータを保存するかどうかの確認を追加(c27)
2015.05.12 - CamShiftをメソッドに(c26).マウスを放すまでは色の選択を待ち，放したら計測の処理を開始するように変更
2015.05.11 - プログラムの整理&CamShiftの追加(c25)
2015.05.07 - データの整理
2015.03.09 - 前回の続き(c24)
2015.02.26 - 一旦ラベリングをやめてオープニングで距離を抽出する(c24)
2015.02.19 - ラベリングの情報を取得(c23)
2015.02.18 - オープニング処理を行った画像に対して平均座標を計算する(c20)．ラベリング機能を追加(c21)．保存したデータが不要だった場合削除する機能を追加(c22)
2015.02.16 - 抽出後のピクセルの膨張・縮小処理を追加(オープニング)(c19)
2015.02.03 - プログラムの見直し．ピクセルの膨張・収縮検討
2014.12.22 - 処理時間の計測を行う(c18)
2014.12.17 - プログラムの修正．動画を表示する処理をクラス内へ移動(c17)
2014.12.16 - プログラムの整理(c16)
2014.12.15 - プログラムの修正
2014.12.12 - プログラムを見やすいように整理(c15)
2014.12.11 - プログラムを見やすいように整理(c14)
2014.12.10 - プログラムを見やすいように整理．クラス定義を<クラス名.hpp＞にその処理を<クラス名.cpp>に書くように変更．一部追加(c13)
2014.12.08 - 12.05のアイデアを導入．計測が上手くいかなかったときのためにgoto文でやり直し(c12)
2014.11.28 - 距離の平均の計算の際小数点以下が切り捨てられていたため変更(c11)
2014.11.21 - 続き(c10)
2014.11.20 - 2014.11.19の続き(c10)
2014.11.19 - 今までのプログラムの修正(配列の307200をALLPIXELに32をNOCに変更)．1フレームで取得した(x,y,z)の平均から1点の(x,y,z)を求める(未完)．(c10)
2014.11.04 - 取得した(x,y,z)を世界座標系の(X,Y,Z)へ変換(c9)
2014.10.31 - 抽出した座標データと距離データをまとめえてファイルに出力してプロット(c8)
2014.10.30 - 抽出した座標(x,y)とそれに対応した距離(z)を別のファイルに書き出し、UNIXのpasteコマンドを用いて新たに3d.datというデータの組(x,y,z)を作成．その後splotを行う．(c7)
2014.10.29 - 続き．取得した(x,y)座標を1次元に変換した値を1フレームごとに配列に保存(c6)
2014.10.28 - 特定座標の距離を取得しようとしたが失敗
2014.10.27 - ディレクトリ名のフォーマットを"[YearMonthDay]hour_minute_second"に変更．抽出した部分の距離を取得するように分岐(GetPinpointDepth)(c5)
メモ：距離画像の特定のピクセルにアクセスできるようにすれば良い?
2014.10.24 - 画像の(x,y)座標をファイルに出力し，プロット.データ保存用のディレクトリを作成(c4)
2014.10.23 - Kinect::run()をmain()内へ移行.HSV画像から特定の色を抽出するよう変更(c3)
2014.10.17 - 画像処理用のクラスを作成.HSVに変換(c2)
2014.10.16 - 距離画像を表示するプログラム(c1)
2014.10.15 - ファイルの追加，距離データを画像として表示するプログラム(c1)

/******** コメントの書き方 *********/
・クラスや関数の前は /*! @◯◯ ~ */
・変数を宣言したら後ろに //!<~
・メソッド内の処理に関してのコメントは全て //


/******** メモ・アイデア ********/
2014.12.05
距離は前フレームと比較して大幅に変更されることはない(ロボットの動きからして)
→前フレームの値(old_distance)と今回取得した値(distance)を比較してその絶対値が特定の範囲(例えば1cm)以内であれば，
　有用なデータとして保存．満たさなかった場合は省くようにする
→取得したデータがギザギザになるのを防ぐ

/************* ファイルの構成 **************/
3DPathTrackingUsingtheKINECT.hpp - よく使うヘッダファイルのインクルードなど
main.cpp - main関数
KinectMethod.hpp - Kinectの処理に関するヘッダファイル．クラス定義
KinectMethod.cpp - Kinectの処理を記述したファイル
ImageProcessingMathod.hpp - 画像処理関連の処理に関するヘッダファイル．クラス定義
ImageProcessingMathod.cpp - 画像処理の内容を記述したファイル
RouteDrawingMethod.hpp - gnuplotで画像を描画する際のヘッダファイル．クラス定義
RouteDrawingMethod.hpp - gnuplotで画像を描画する際の処理を記述したファイル